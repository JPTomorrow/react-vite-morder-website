import RoundedSeparator from "@/components/RoundedSeparator";
import StarHeader from "@/components/StarHeader";
import Project from "@/components/Project";

import TestImg from "@/assets/homepage-bg-1.jpg";
import trainingVid from "@/assets/marathon-training-videos-pic.png";

const proffesionalProjects = {
  bomGenerator: {
    title: "Bill of Materials Generator",
    subTitle: "WPF Application",
    skillsUsed: "C#, WPF",
    description: [
      "Uses Revit API for interoperability with Autodesk Revit",
      "Generates Bill of Materials from the 3D CAD models that Revit produces",
      "Systems for calculating wire and Hanger systems for MEP conduit racks",
    ],
    image: TestImg,
    githubLink:
      "https://github.com/JPTomorrow/revit-bill-of-materials-generator",
  },
  marathonTrainingVideos: {
    title: "Marathon Training Videos",
    subTitle: "Website",
    skillsUsed: "Vue, Microsoft Azure, API's",
    description: [
      "A website for training marathon field workers in construction safety",
      "The employees must watch a video and complete a test",
      "The results of that test will be emailed to their supervisor for review",
      "Uses Microsoft azure to host the website and Azure functions to send the email to a supervisor",
    ],
    image: trainingVid,
    githubLink: "https://github.com/JPTomorrow/marathon-training-videos",
  },
  bluebeamInWall: {
    title: "Bluebeam In Wall BOM Generator",
    subTitle: "CLI Application",
    skillsUsed: "C#, PDF format parsing",
    description: [
      "This program generates a Bill of Materials for In Wall devices using PDF's generated by Bluebeam",
      "Bluebeam has a system for custom markups that is used to build the in wall device boxes",
      "",
      "Uses Microsoft azure to host the website and Azure functions to send the email to a supervisor",
    ],
    image: TestImg,
    githubLink: "https://github.com/JPTomorrow/bluebeam-pthree-in-wall",
  },
};

function ProjectsPage(props) {
  return (
    <div
      ref={props.scrollRef}
      className="relative text-center bg-gray-800 pb-10 h-full border-t-2"
    >
      <StarHeader className="pt-20">Professional Projects</StarHeader>
      <div className="flex flex-col items-center gap-2 mt-[75px] mb-[100px]">
        {Object.values(proffesionalProjects).map((project, i) => {
          return (
            <Project
              key={i}
              title={project["title"]}
              subTitle={project["subTitle"]}
              skillsUsed={project["skillsUsed"]}
              description={project["description"]}
              image={project["image"]}
              githubLink={project["githubLink"]}
            />
          );
        })}
      </div>
      <RoundedSeparator className="fill-gray-800" />
    </div>
  );
}

export default ProjectsPage;
